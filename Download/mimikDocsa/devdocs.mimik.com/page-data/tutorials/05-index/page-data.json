{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/tutorials/05-index",
    "result": {"data":{"site":{"siteMetadata":{"title":"mimik Developer Portal | mimik","docsLocation":"https://bitbucket.org/mimiktech/dev-portal-content/src/develop/content/"}},"mdx":{"fields":{"id":"be731de1-860c-5020-8d6f-13d0c9ba4721","title":"Getting edgeEngine Up and Running on Raspberry Pi","slug":"/tutorials/05-index"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Getting edgeEngine Up and Running on Raspberry Pi\",\n  \"metaTitle\": \"Getting edgeEngine Up and Running on Raspberry Pi\",\n  \"metaDescription\": \"Getting edgeEngine Up and Running on Raspberry Pi\",\n  \"seo\": \"mimik, edge, edgeEngine, tutorial, microservice, software development, deployment, raspberry pi, automation\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Objective\"), mdx(\"p\", null, \"The objective of this tutorial is to demonstrate how to get a Raspberry Pi device up and running with the Raspian operating system and then install and run the edgeEngine Runtime on that device.\"), mdx(\"h1\", null, \"Intended Readers\"), mdx(\"p\", null, \"The intended reader of this document is a person with programming or system administration skills that want to learn how to install and use the edgeEngine Runtime on a Raspberry Pi device.\"), mdx(\"p\", null, \"To be full benefit from reading this tutorial, it's useful to have a basic understanding of:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the edgeEngine Runtime. For a review of the details go \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/key-concepts/01-index\"\n  }, \"here\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Developer Tokens and Access Tokens. For a review of the details go \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/key-concepts/03-index\"\n  }, \"here\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"working with the Linux operating system from the command line within a terminal window.\")), mdx(\"h1\", null, \"What You'll Be Doing\"), mdx(\"p\", null, \"In this tutorial, you'll be doing 4 things. They are as follows:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You'll set up a Raspberry Pi computer running the Raspian operating system. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You'll be shown how to connect the Raspberry Pi to a wireless network. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You'll enable SSH on the Raspian system and then discover the IP address of the machine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"You'll get the edgeEngine Runtime up and running on the Raspberry Pi device\")), mdx(\"h1\", null, \"Technical Prerequisites\"), mdx(\"p\", null, \"In order to get full benefit for this tutorial, you'll need  the following:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A Raspberry Pi computer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Access to the internet\")), mdx(\"h1\", null, \"Setting up the Raspberry Pi machine\"), mdx(\"p\", null, \"This project requires that a Raspberry Pi device to be up and running under the Raspian Desktop operating system. The easiest way to do this is to use the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.raspberrypi.org/blog/raspberry-pi-imager-imaging-utility/\"\n  }, \"Raspberry Pi Imager\"), \" program.\"), mdx(\"p\", null, \"This 45-second video shows you how to create an image on a microSD card that you'll insert into the given Raspberry Pi device.\"), mdx(\"iframe\", {\n    width: \"560\",\n    height: \"315\",\n    src: \"https://www.youtube.com/embed/ntaXWS8Lk34\",\n    title: \"YouTube video player\",\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n    allowFullScreen: true\n  }), mdx(\"p\", null, \"Once the MicroSD card is inserted into the Raspberry Pi device, and the machine is turned on, you'll be taken through the final setup process to get Raspian up and running on the device. \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"What is the default username on a new Raspian installation?\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The default username on a new Raspian installation is \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"pi.\"))))), mdx(\"p\", null, \"When setting up Raspberry Pi Desktop for the first time, you'll be prompted to change the login password, when you change the password.\"), mdx(\"h2\", null, \"Enabling Wi-Fi\"), mdx(\"p\", null, \"When you setup up Raspberry Pi Desktop for the first time, you will be prompted to connect to your Wi-Fi network. The Wi-Fi setup dialog is shown below in Figure 1.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"img\", {\n    parentName: \"th\",\n    \"src\": \"https://raspberrytips.com/wp-content/uploads/2019/09/wifi.jpg?ezimgfmt=rs:300x210/rscb45/ng:webp/ngcb45\",\n    \"alt\": \"wifi\"\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Figure 1: The Wi-Fi configuration dialog in Raspian Desktop setup\"))))), mdx(\"p\", null, \"The article found \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://raspberrytips.com/raspberry-pi-wifi-setup/\"\n  }, \"here\"), \" describes the Wi-Fi setup process. You find wife configuration instructions in the section of the article titled, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Configure Wi-Fi on Raspbian Desktop\"), \".\"), mdx(\"h2\", null, \"Ensuring SSH is enabled\"), mdx(\"p\", null, \"There are two ways to install the mDebug Web utility on the Raspberry Pi device. One way is to install it from within a terminal window on the Raspberry Pi device itself. The other way is to access the Raspberry Pi device from an external machine using SSH. If you want to use an external machine to install the mDebug web utility, you need to enable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh\"), \" on the given Raspberry Pi device. Then enable SSH on the Raspberry Pi device do the following:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" Click the Raspberry icon in the upper left of the Raspian Desktop UI as shown in Figure 2 below:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"img\", {\n    parentName: \"th\",\n    \"src\": \"https://phoenixnap.com/kb/wp-content/uploads/2021/04/raspberry-pi-configuration-preferences-gui.png\",\n    \"alt\": \"ssh 1\"\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Figure 2: Accessing the Raspberry Pi Configuration dialog from the Raspian Desktop\"))))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Select Raspberry Pi Configuration from the Preferences sub-menu as shown n Figure 2 above.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3:\"), \" Select the option, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SSH\"), \" from the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Interfaces\"), \" tab of the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Raspberry Pi Configuration\"), \" dialog as shown in Figure 3 below.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"img\", {\n    parentName: \"th\",\n    \"src\": \"https://phoenixnap.com/kb/wp-content/uploads/2021/04/raspberry-pi-configuration-interaface-gui.png\",\n    \"alt\": \"ssh-02\"\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"Figure 3: Enabling SSH from the Raspian Desktop  Raspberry Pi Configuration dialog\"))))), mdx(\"h2\", null, \"Discovering the IP address of the machine\"), mdx(\"p\", null, \"Once Wi-Fi is turned on and SSH is configured, you need to discover the IP address of the machine. To discover the IP address of a given Raspberry Pi machine, take the following steps:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" Open a terminal window by clicking the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"terminal\"), \" icon, which is the fourth icon to the right in the top menu bar of the Raspberry Pi Desktop UI, as shown above in Figure 1.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Type the following command into the terminal:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ifconfig\\n\")), mdx(\"p\", null, \"This will give you the IP address of the current machine. You'll get output similar to the following. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"eth0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500\\n        ether e4:5f:01:09:7c:4d  txqueuelen 1000  (Ethernet)\\n        RX packets 0  bytes 0 (0.0 B)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 0  bytes 0 (0.0 B)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\\nlo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536\\n        inet 127.0.0.1  netmask 255.0.0.0\\n        inet6 ::1  prefixlen 128  scopeid 0x10<host>\\n        loop  txqueuelen 1000  (Local Loopback)\\n        RX packets 42829  bytes 18852669 (17.9 MiB)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 42829  bytes 18852669 (17.9 MiB)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\\nwlan0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\\n        inet 192.168.86.41  netmask 255.255.255.0  broadcast 192.168.86.255\\n        inet6 fe80::95e2:f9cd:4121:f792  prefixlen 64  scopeid 0x20<link>\\n        ether e4:5f:01:09:7c:4e  txqueuelen 1000  (Ethernet)\\n        RX packets 1262118  bytes 723231100 (689.7 MiB)\\n        RX errors 0  dropped 0  overruns 0  frame 0\\n        TX packets 799493  bytes 177223986 (169.0 MiB)\\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\\n\")), mdx(\"p\", null, \"Notice in the example above at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Line 18\"), \" that the IP address for the machine is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"192.168.86.41\")), \" under the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"wlan0\")), \" section staring at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Line 17\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wlan0\"), \" indicates that the IP address is bound to the wireless network. Your IP address will be different.\"), mdx(\"p\", null, \"If you do not see an IP address, run the following command to request an IP address from your wireless router:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"dhclient -v\\n\")), mdx(\"p\", null, \"Then, run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ifconfig\"), \" again.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"SAVE THE IP ADDRESS! YOU'LL NEED IT LATER WHEN YOU CONFIGURE THE \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"hosts\"), \" file.\")), mdx(\"h2\", null, \"Giving the machine a unique name\"), mdx(\"p\", null, \"The default installation process of Raspian gives every machine the same name. This can be a difficulty when working with many machines in a cluster of Raspberry Pi computers, particularly when debugging many machines at once via SSH. To make things easier, it's useful to give each machine in the cluster a unique name.\"), mdx(\"p\", null, \"To give a machine a unique name, take the following steps:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" Go to a terminal window from within the Raspian Desktop UI,\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Execute the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo vi /etc/hostname\\n\")), mdx(\"p\", null, \"The file, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/hostname\"), \" will have the current name of the machine.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3:\"), \" Strike the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"i\"), \" key to put the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vi\"), \" editor into edit mode.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 4:\"), \" Change the content of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/hostname\"), \" to a unique machine name using a name of your choice. For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"mypi-01\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 5:\"), \" Strike the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Esc\"), \" key to take the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vi\"), \" editor out of edit mode.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 6:\"), \" Strike the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \":\"), \" key get \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vi\"), \" to accept the exit commands to come\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 7:\"), \" Strike the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wq\"), \" keys to save the changes and exit \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"vi\"), \".\"), mdx(\"p\", null, \"You are now ready to restart the machine\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 8:\"), \" To restart the machine, type the following in the terminal window:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo reboot\\n\")), mdx(\"h2\", null, \"Testing the SSH connection\"), mdx(\"p\", null, \"You'll test the SSH connection of the Raspberry Pi device you've just configured from another machine on the network. To test the SSH connection, take the following steps:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" Go to a terminal in another machine on your network from which you can execute the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh\"), \" command.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Type the following command in the terminal window of the second machine:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ssh <pi@PI_MACHINE_IP_ADDRESS>\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WHERE\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pi\"), \" is the default user name of the Raspberry Pi machine you've just configured\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<PI_MACHINE_IP_ADDRESS>\"), \" is the IP address of the Raspberry Pi machine.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DO NOT TYPE THE SYMBOLS:\"), \" \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \">\")), mdx(\"p\", null, \"In this case, the command you'll use to access the Raspberry Pi device above with the IP address \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"192.168.86.41\"), \" will be:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"ssh pi@192.168.86.41\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3:\"), \" Since this will be your first login to the Raspberry Pi via \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh\"), \" you'll be asked the following.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"The authenticity of host '192.168.86.XX (192.168.86.XX)' can't be established.\\nECDSA key fingerprint is SHA256:0syuqfaKHQWgllXeZR1hd2skhJaKE5m7qay2x6Mk9KM.\\nAre you sure you want to continue connecting (yes/no/[fingerprint])? \\n\")), mdx(\"p\", null, \"Answer \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yes\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 4:\"), \" You'll be prompted to provide the password for the user \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pi\"), \". Enter the password.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pi@192.168.86.41's password: \")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BE ADVISED:\"), \" You need to change the password for the user \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pi\"), \" when setting up the Raspian Desktop. Make sure you use that password.\"), mdx(\"p\", null, \"If all is good, you'll get a response to the login somewhat similar to the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"Linux mypi-01 5.10.17-v7l+ #1414 SMP Fri Apr 30 13:20:47 BST 2021 armv7l\\n\\nThe programs included with the Debian GNU/Linux system are free software;\\nthe exact distribution terms for each program are described in the\\nindividual files in /usr/share/doc/*/copyright.\\n\\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\\npermitted by applicable law.\\nLast login: Wed Jun  2 17:13:55 2021 from 192.168.86.XX\\n\")), mdx(\"p\", null, \"You have successfully established an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ssh\"), \" connection to the machine you provisioned.\"), mdx(\"h1\", null, \"Installing the \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"mimik-edge-cli\"), \" tool and the edgeEngine Runtime\"), mdx(\"p\", null, \"To install and run the edgeEngine Runtime on the Raspberry Pi device, follow the tutorial, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"02-index\"\n  }, \"Installing edgeEngine and the mimik-edge-cli Tool on a Linux System or MacOS\")), \", but BEWARE by reading the advisory that follows.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"IMPORTANT: Make sure you download the Raspian version of the edgeEngine Runtime\")))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"The tutorial described above that shows you how to install and run edgeEngine Runtime is intended for general Linux installation. The version of the edgeEngine Runtime you need for Raspberry Pi devices is special. Thus, you need to make sure you are installing and running the Raspberry Pi/Raspian version of the edgeEngine Runtime.\", mdx(\"br\", null), mdx(\"br\", null), \"The most recent version of the edgeEngine Runtime for Raspberry Pi/Raspian can be found at \", mdx(\"a\", {\n    parentName: \"td\",\n    \"href\": \"https://github.com/edgeEngine/egdeengine-raspbian/releases\"\n  }, \"https://github.com/edgeEngine/egdeengine-raspbian/releases\"), \".\")))), mdx(\"h1\", null, \"Installing Node.js\"), mdx(\"p\", null, \"After you get the Raspian up and running in the Raspberry Pi Device, you need to install Node.js. Node.js is critical for running the edgeEngine Runtime and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool is used to deploy and run edge microservice on a device that's running the edgeEngine Runtime.\"), mdx(\"p\", null, \"To install Node.js on the Raspberry Pi device, take te3h following steps.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" execute the following command in a Raspberry Pi terminal window to configure the location of the Node.js deployment package on the Raspberry Pi device.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"curl -sLf -o /dev/null 'https://deb.nodesource.com/node_14.x/dists/buster/Release'\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" execute the following command in a Raspberry Pi terminal window to install Node.js:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt-get install -y nodejs\\n\")), mdx(\"p\", null, \"You'll see a lot of activity in the terminal window during the installation process.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3:\"), \" Once installation has been completed, execute the following command in the terminal window to verify that Node.js has been property installed:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"node --version\\n\")), mdx(\"p\", null, \"You'll get output similar to the following, depending on the latest version of Node.js:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"v14.18.1\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 4:\"), \" Execute the following command in the terminal window to verify that the NPM package manager has been properly installed as part of the Nod.js installation:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"npm --version\\n\")), mdx(\"p\", null, \"You'll get output similar to the following, depending on the latest version of NPM:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"6.14.15\\n\")), mdx(\"h1\", null, \"Opening Port \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"8083\")), mdx(\"p\", null, \"By default, edge microservices listen to the default port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8083\"), \" to process incoming requests. Thus, that port needs to be open to outside access on the Raspberry Pi device. You can open ports on a Raspberry device using a program named \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Uncomplicated Firewall\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw\"), \". This program does not ship with the default installation of Raspberry Pi. It needs be installed. Take the following steps to install \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw\"), \" on the Raspberry Pi device and open port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8083\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 1:\"), \" Execute the following task in a terminal window to update the Raspberry Pi packages environment:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt update\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Be advised\"), \" you will be asked for the administrator's password for the Raspberry Pi Device.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Execute the following task in a terminal window to install \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo apt install ufw\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 2:\"), \" Execute the following task in a terminal window to verify the installation of  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo ufw --version\\n\")), mdx(\"p\", null, \"You'll get output similar to the following, depending on the latest version of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ufw\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"ufw 0.36\\nCopyright 2008-2015 Canonical Ltd.\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Step 3:\"), \"  To open port \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"8083\"), \" on the Raspberry Pi device, execute the following command in a terminal window:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sudo ufw allow 8083\\n\")), mdx(\"p\", null, \"You'll get the following output:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"Rules updated\\nRules updated (v6)\\n\")), mdx(\"p\", null, \"The Raspberry Pi device is now ready for the installation and use of the edgeEngine Runtime and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool. The following section describes how to install the edgeEngine Runtime and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool on the Raspberry Pi device.\"), mdx(\"h1\", null, \"Installing the edgeEngine Runtime and \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"mimik-edge-cli\"), \" tool.\"), mdx(\"p\", null, \"To learn how to install the edgeEngine Runtime and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool follow the tutorial, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"02-index\"\n  }, \"Installing edgeEngine and the mimik-edge-cli Tool on a Linux System or MacOS\")), \".\"), mdx(\"p\", null, \"Once the edgeEngine Runtime and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mimik-edge-cli\"), \" tool are installed, you need to configure an Access Token to the edgeRuntime in order for the Raspberry Pi device to work with edge microservices. The following section describes the process.\"), mdx(\"h1\", null, \"Configuring the edgeEngine Runtime with an Access Token\"), mdx(\"p\", null, \"To learn how to configure the edgeEngine Runtime with an Access Token, follow the tutorial, \", mdx(\"em\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"em\",\n    \"href\": \"02-index\"\n  }, \"Using the mimik-edge-cli Tool to Get An Access Token\")), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Congratulations!\"), \" You've gotten a Raspberry Pi device up and running with the edgeEngine Runtime.\"), mdx(\"h1\", null, \"Review\"), mdx(\"p\", null, \"In this section, you learned:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to install the Raspian operating system on a Raspberry Pi device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to install Node.js on a Raspberry Pi device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to open port \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"8083\"), \" on the Raspberry Pi device using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ufw\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to install the edgeEngine Runtime and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mimik-edge-cli\"), \" tool on the Raspberry Pi device\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"How to get an Access Token and associate it to the edgeEngine Runtime\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#objective","title":"Objective"},{"url":"#intended-readers","title":"Intended Readers"},{"url":"#what-youll-be-doing","title":"What You'll Be Doing"},{"url":"#technical-prerequisites","title":"Technical Prerequisites"},{"url":"#setting-up-the-raspberry-pi-machine","title":"Setting up the Raspberry Pi machine","items":[{"url":"#enabling-wi-fi","title":"Enabling Wi-Fi"},{"url":"#ensuring-ssh-is-enabled","title":"Ensuring SSH is enabled"},{"url":"#discovering-the-ip-address-of-the-machine","title":"Discovering the IP address of the machine"},{"url":"#giving-the-machine-a-unique-name","title":"Giving the machine a unique name"},{"url":"#testing-the-ssh-connection","title":"Testing the SSH connection"}]},{"url":"#installing-the-mimik-edge-cli-tool-and-the-edgeengine-runtime","title":"Installing the mimik-edge-cli tool and the edgeEngine Runtime"},{"url":"#installing-nodejs","title":"Installing Node.js"},{"url":"#opening-port-8083","title":"Opening Port 8083"},{"url":"#installing-the-edgeengine-runtime-and-mimik-edge-cli-tool","title":"Installing the edgeEngine Runtime and mimik-edge-cli tool."},{"url":"#configuring-the-edgeengine-runtime-with-an-access-token","title":"Configuring the edgeEngine Runtime with an Access Token"},{"url":"#review","title":"Review"}]},"parent":{"relativePath":"tutorials/05-index.md"},"frontmatter":{"metaTitle":"Getting edgeEngine Up and Running on Raspberry Pi","metaDescription":"Getting edgeEngine Up and Running on Raspberry Pi"}},"allMdx":{"edges":[{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":{"slug":"/","title":"Welcome to the mimik Developer Documentation"}}},{"node":{"fields":{"slug":"/faqs","title":"FAQs"}}},{"node":{"fields":{"slug":"/api","title":"mimik Object Models, Tools and APIs Reference"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to edgeEngine"}}},{"node":{"fields":{"slug":"/key-concepts","title":"Key Concepts"}}},{"node":{"fields":{"slug":"/misc","title":"Privacy Policy and Disclaimer"}}},{"node":{"fields":{"slug":"/search-result","title":"Search result for"}}},{"node":{"fields":{"slug":"/troubleshooting","title":"Troubleshooting Questions"}}},{"node":{"fields":{"slug":"/api/02-index","title":"Node Discovery API Reference"}}},{"node":{"fields":{"slug":"/api/03-index","title":"mDebug API Reference"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/api/01-index","title":"Command Line Tool Reference"}}},{"node":{"fields":{"slug":"/api/04-index","title":"JSON RPC API Reference"}}},{"node":{"fields":{"slug":"/api/05-index","title":"mimik Identity Server API Reference"}}},{"node":{"fields":{"slug":"/faqs/01-faqs","title":"FAQs: Hybrid edgeCloud Platform"}}},{"node":{"fields":{"slug":"/faqs/02-faqs","title":"FAQs: mimik Technology"}}},{"node":{"fields":{"slug":"/faqs/03-faqs","title":"FAQs: mimik Deployment and Integration"}}},{"node":{"fields":{"slug":"/faqs/06-faqs","title":"FAQs: edgeEngine Security"}}},{"node":{"fields":{"slug":"/faqs/04-faqs","title":"FAQs: edgeEngine JavaScript Serverless"}}},{"node":{"fields":{"slug":"/faqs/05-faqs","title":"FAQs: edgeEngine Device Connectivity"}}},{"node":{"fields":{"slug":"/introduction/01-index","title":"What Does the edgeEngine Runtime Do?"}}},{"node":{"fields":{"slug":"/introduction/02-index","title":"What Problem Does edgeEngine Solve?"}}},{"node":{"fields":{"slug":"/faqs/07-faqs","title":"FAQs: mimik Network Topology"}}},{"node":{"fields":{"slug":"/introduction/03-index","title":"How Does the edgeEngine Runtime Work?"}}},{"node":{"fields":{"slug":"/introduction/04-index","title":"What Does edgeEngine Service Mesh Do?"}}},{"node":{"fields":{"slug":"/introduction/05-index","title":"What Problem Does the edgeEngine Service Mesh Solve?"}}},{"node":{"fields":{"slug":"/introduction/06-index","title":"How Does edgeEngine Service Mesh Work?"}}},{"node":{"fields":{"slug":"/faqs/09-faqs","title":"FAQs: edgeEngine memory & CPU usage"}}},{"node":{"fields":{"slug":"/faqs/08-faqs","title":"FAQs: edgeEngine Network Configuration"}}},{"node":{"fields":{"slug":"/key-concepts/01-index","title":"Understanding the Fundamentals of the edgeEngine Runtime"}}},{"node":{"fields":{"slug":"/key-concepts/02-index","title":"Understanding edgeEngine Images and edgeEngine Containers"}}},{"node":{"fields":{"slug":"/key-concepts/03-index","title":"Understanding edgeEngine Tokens"}}},{"node":{"fields":{"slug":"/key-concepts/04-index","title":"Understanding the Strategies for Deploying an edge Microservice"}}},{"node":{"fields":{"slug":"/key-concepts/07-index","title":"Understanding the edgeEngine Security Framework"}}},{"node":{"fields":{"slug":"/key-concepts/08-index","title":"Understanding edgeEngine Data Management"}}},{"node":{"fields":{"slug":"/key-concepts/09-index","title":"Understanding the mimik Client Library for iOS"}}},{"node":{"fields":{"slug":"/key-concepts/05-index","title":"Understanding the edgeEngine Context Object"}}},{"node":{"fields":{"slug":"/misc/01-index","title":"mimik Technology Disclaimer and Terms of Use Policy"}}},{"node":{"fields":{"slug":"/misc/02-index","title":"mimik Technology Incorporated Privacy Policy"}}},{"node":{"fields":{"slug":"/key-concepts/10-index","title":"Understanding How to Integrate the mimik Client Library into Android Applications"}}},{"node":{"fields":{"slug":"/key-concepts/11-index","title":"Working with edgeEngine and WebAssembly"}}},{"node":{"fields":{"slug":"/tutorials/02-index","title":"Getting the edgeEngine license and Identity server values from mimik Developer Portal"}}},{"node":{"fields":{"slug":"/tutorials/03-index","title":"Installing edgeEngine and the mimik-edge-cli Tool on a Linux System or MacOS"}}},{"node":{"fields":{"slug":"/tutorials/04-index","title":"Using the mimik-edge-cli Tool to Get An Access Token"}}},{"node":{"fields":{"slug":"/tutorials/06-index","title":"Creating an edge Microservice using WebAssembly"}}},{"node":{"fields":{"slug":"/tutorials/08-index","title":"Creating a Secure Network Connection using mimik Tunneling Technology"}}},{"node":{"fields":{"slug":"/tutorials/01-index","title":"QuickStart"}}},{"node":{"fields":{"slug":"/tutorials/05-index","title":"Getting edgeEngine Up and Running on Raspberry Pi"}}},{"node":{"fields":{"slug":"/tutorials/07-index","title":"Getting Up and Running with mDebug"}}},{"node":{"fields":{"slug":"/tutorials/12-index","title":"Working with edgeEngine in an iOS project"}}},{"node":{"fields":{"slug":"/tutorials/11-index","title":"Integrating the mimik Client Library into an iOS project"}}},{"node":{"fields":{"slug":"/tutorials/13-index","title":"Working with edge microservices in an iOS project"}}},{"node":{"fields":{"slug":"/tutorials/10-index","title":"Creating a Simple iOS Application that Uses an edge microservice"}}},{"node":{"fields":{"slug":"/tutorials/09-index","title":"Creating a Simple Android Application that Uses an edge microservice"}}},{"node":{"fields":{"slug":"/key-concepts/06-index","title":"Understanding the edgeEngine Service Mesh"}}}]}},"pageContext":{"id":"be731de1-860c-5020-8d6f-13d0c9ba4721"}},
    "staticQueryHashes": ["2619113677","320950771","3706406642","417421954"]}