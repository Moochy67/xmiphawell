{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/tutorials/11-index",
    "result": {"data":{"site":{"siteMetadata":{"title":"mimik Developer Portal | mimik","docsLocation":"https://bitbucket.org/mimiktech/dev-portal-content/src/develop/content/"}},"mdx":{"fields":{"id":"31d16071-97c2-542a-9b8a-be54adb8eadd","title":"Integrating the mimik Client Library into an iOS project","slug":"/tutorials/11-index"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"Integrating the mimik Client Library into an iOS project\",\n  \"metaTitle\": \"Integrating the mimik Client Library into an iOS project\",\n  \"metaDescription\": \"Integrating the mimik Client Library into an iOS project\",\n  \"seo\": \"mimik, edge, edgeEngine, tutorial, microservice, deploy, deployment, iOS, iPadOS, iPhone\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Objective\"), mdx(\"p\", null, \"The objective of this document is to demonstrate various concepts and techniques that developers need to understand to integrate the mimik Client Library with an iOS application.\"), mdx(\"h1\", null, \"Intended Readers\"), mdx(\"p\", null, \"The intended readers of this document are iOS software developers and system integrators using the mimik Client Library when developing an iOS application.\"), mdx(\"h1\", null, \"What You'll Be Doing\"), mdx(\"p\", null, \"In this article you'll be covering the following topics that are relevant to integrating the mimik Client Library into an iOS application:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configuring a Podfile\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installing the  \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MIMIKEdgeClientCore\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"MIMIKEdgeClientEngine\"), \" pods\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Importing mimik Components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Initializing Components\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implementing Logging\")), mdx(\"h1\", null, \"Technical Prerequisites\"), mdx(\"p\", null, \"This tutorial has the following technical prerequisite: A device running the latest iOS version.\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"NOTE:\"), \" \", mdx(\"br\", null), mdx(\"br\", null), \"Working with the iOS Simulator and the mimik Client Libraries entails some special consideration. For more more information about iOS Simulator support see \", mdx(\"a\", {\n    parentName: \"th\",\n    \"href\": \"../tutorials/12-index#workingwithaniossimulator\"\n  }, \"this tutorial\"), \".\")))), mdx(\"h1\", null, \"Using the mimik Client Library components in an iOS project\"), mdx(\"p\", null, \"Using the mimik Client Library components in an iOS project is a two-phase process. The phases are:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configuring a Podfile\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Executing pod commands\")), mdx(\"p\", null, \"The following sections describe the details of each phase.\"), mdx(\"h1\", null, \"Configuring a Podfile\"), mdx(\"p\", null, \"The mimik Client Library components are dependencies that get installed in an iOS project using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/CocoaPods/CocoaPods#cocoapods-the-cocoa-dependency-manager\"\n  }, \"CocoaPods dependency manager\"), \". Listing 1 below shows an example of a CocoaPods's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Podfile\"), \" that developers need to use with their iOS projects. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Podfile\"), \" defines the source code repository locations containing the relevant dependencies, as shown in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Lines 2-3\"), \". It also declares the mimik Client Library pod components at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Lines 7-8\"), \". With additional configuration requirements at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Lines 11-18\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"platform :ios, '15.0'\\nsource 'https://github.com/CocoaPods/Specs.git'\\nsource 'https://github.com/mimikgit/cocoapod-edge-specs.git'\\n\\ntarget 'example' do\\n  use_frameworks!\\n  pod 'MIMIKEdgeClientCore'\\n  pod 'MIMIKEdgeClientEngine'\\nend\\n\\npost_install do |installer|\\n  installer.pods_project.targets.each do |target|\\n    target.build_configurations.each do |config|\\n      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'\\n      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'\\n    end\\n  end\\nend\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Listing 1: A example Podfile for working with mimik Client Library Components\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Executing pod commands\"), mdx(\"p\", null, \"Once a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Podfile\"), \" is configured, developer will run a variety of commands, both from the command line and from within code to get an application using mimik libraries up and running.\\nThe sections that follow describe the details.\"), mdx(\"h1\", null, \"Installing mimik components using \", mdx(\"inlineCode\", {\n    parentName: \"h1\"\n  }, \"pod install\")), mdx(\"p\", null, \"Once the dependencies are defined in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Podfile\"), \", developers initiate the installation of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientCore\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientEngine\"), \" pods as well as their dependencies into the iOS project using the following command:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"pod install\\n\")), mdx(\"p\", null, \"Running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pod install\"), \" against the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Podfile\"), \" a described above displays output similar to the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"Analyzing dependencies\\nDownloading dependencies\\nInstalling Alamofire\\nInstalling AppAuth\\nInstalling JWTDecode\\nInstalling MIMIKEdgeClientCore\\nInstalling MIMIKEdgeClientEngine\\nInstalling SwiftyJSON\\nGenerating Pods project\\nIntegrating client project\\n\")), mdx(\"p\", null, \"At this point, the mimik Client Library components are installed in the iOS project's workspace, ready for use in code.\"), mdx(\"h1\", null, \"Importing mimik Components\"), mdx(\"p\", null, \"Before developers can initialize the mimik Client Library components, they need to import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientCore\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientEngine\"), \" component references into their class. The code example below shows you how to use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import\"), \" command inline in code to import mimik component libraries.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\",\n    \"metastring\": \"hide_line_numbers\",\n    \"hide_line_numbers\": true\n  }, \"import MIMIKEdgeClientCore\\nimport MIMIKEdgeClientEngine\\n\")), mdx(\"h1\", null, \"Initializing Components\"), mdx(\"p\", null, \"In order to get the mimik Client Library components up and running in an iOS project, developers need to initialize them. Listing 2 below shows an example of how to create instances of the two mimik Client Library components within a class. \"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"import MIMIKEdgeClientCore\\nimport MIMIKEdgeClientEngine\\n\\nlet edgeClient: MIMIKEdgeClient = {\\n    return MIMIKEdgeClient()\\n}()\\n\\nlet edgeEngine: MIMIKEdgeClientEdgeEngine = {\\n    guard let mimikEdgeEngine = MIMIKEdgeClientEdgeEngine() else {\\n        fatalError(\\\"Error\\\")\\n    }\\n    return mimikEdgeEngine\\n}()\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Listing 2: The code for initializing the mimik Client Library Components in an iOS application\")), mdx(\"hr\", null), mdx(\"p\", null, \"Notice the code \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClient()\"), \" at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Line 5.\"), \" This is where the instance of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientCore\"), \" gets created. \"), mdx(\"p\", null, \"Additionally, notice the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"guard let mimikEdgeEngine = MIMIKEdgeClientEdgeEngine()\"), \" code at \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Line 9\"), \". This is where the instance of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientEngine\"), \" gets created. Since the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MIMIKEdgeClientEngine\"), \" initializer is failable, this line does a guard check, making sure no errors have occurred.\"), mdx(\"p\", null, \"With that, the mimik Client Library Core and Engine components have been initialized and are ready for use.\"), mdx(\"h1\", null, \"Implementing Logging\"), mdx(\"p\", null, \"Console logging is an important tool for developers when debugging software issues. The mimik Client Library provides a customizable console logging system that developers can configure to suit their needs. The code example below in Listing 3 shows you how to do this.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"func setupLogging() {\\n     // Setting the debug level for the Core component\\n    MIMIKEdgeClient.setLoggingLevel(level: .debug, subsystem: .mimikEdgeClientCore)\\n    // Setting the error level for the Engine component\\n    MIMIKEdgeClient.setLoggingLevel(level: .error, subsystem: .mimikEdgeClientEngine)\\n     // Logging options are also available for a custom component\\n    MIMIKEdgeClient.setLoggingLevel(level: .debug, subsystem: .custom(\\\"MyApp\\\"))\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Listing 3: Setting up logging using the mimik Client Library\")), mdx(\"hr\", null), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"th\"\n  }, \"NOTE:\"), mdx(\"br\", null), \"For more information about the available logging methods, see the \", mdx(\"inlineCode\", {\n    parentName: \"th\"\n  }, \"MIMIKLog\"), \" class.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#objective","title":"Objective"},{"url":"#intended-readers","title":"Intended Readers"},{"url":"#what-youll-be-doing","title":"What You'll Be Doing"},{"url":"#technical-prerequisites","title":"Technical Prerequisites"},{"url":"#using-the-mimik-client-library-components-in-an-ios-project","title":"Using the mimik Client Library components in an iOS project"},{"url":"#configuring-a-podfile","title":"Configuring a Podfile"},{"url":"#executing-pod-commands","title":"Executing pod commands"},{"url":"#installing-mimik-components-using-pod-install","title":"Installing mimik components using pod install"},{"url":"#importing-mimik-components","title":"Importing mimik Components"},{"url":"#initializing-components","title":"Initializing Components"},{"url":"#implementing-logging","title":"Implementing Logging"}]},"parent":{"relativePath":"tutorials/11-index.md"},"frontmatter":{"metaTitle":"Integrating the mimik Client Library into an iOS project","metaDescription":"Integrating the mimik Client Library into an iOS project"}},"allMdx":{"edges":[{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":null}},{"node":{"fields":{"slug":"/introduction","title":"Introduction to edgeEngine"}}},{"node":{"fields":{"slug":"/","title":"Welcome to the mimik Developer Documentation"}}},{"node":{"fields":{"slug":"/api","title":"mimik Object Models, Tools and APIs Reference"}}},{"node":{"fields":{"slug":"/faqs","title":"FAQs"}}},{"node":{"fields":{"slug":"/misc","title":"Privacy Policy and Disclaimer"}}},{"node":{"fields":{"slug":"/key-concepts","title":"Key Concepts"}}},{"node":{"fields":{"slug":"/troubleshooting","title":"Troubleshooting Questions"}}},{"node":{"fields":{"slug":"/search-result","title":"Search result for"}}},{"node":{"fields":{"slug":"/tutorials","title":"Tutorials"}}},{"node":{"fields":{"slug":"/api/02-index","title":"Node Discovery API Reference"}}},{"node":{"fields":{"slug":"/api/03-index","title":"mDebug API Reference"}}},{"node":{"fields":{"slug":"/api/01-index","title":"Command Line Tool Reference"}}},{"node":{"fields":{"slug":"/faqs/01-faqs","title":"FAQs: Hybrid edgeCloud Platform"}}},{"node":{"fields":{"slug":"/api/04-index","title":"JSON RPC API Reference"}}},{"node":{"fields":{"slug":"/faqs/02-faqs","title":"FAQs: mimik Technology"}}},{"node":{"fields":{"slug":"/api/05-index","title":"mimik Identity Server API Reference"}}},{"node":{"fields":{"slug":"/faqs/03-faqs","title":"FAQs: mimik Deployment and Integration"}}},{"node":{"fields":{"slug":"/faqs/05-faqs","title":"FAQs: edgeEngine Device Connectivity"}}},{"node":{"fields":{"slug":"/faqs/06-faqs","title":"FAQs: edgeEngine Security"}}},{"node":{"fields":{"slug":"/faqs/04-faqs","title":"FAQs: edgeEngine JavaScript Serverless"}}},{"node":{"fields":{"slug":"/faqs/07-faqs","title":"FAQs: mimik Network Topology"}}},{"node":{"fields":{"slug":"/faqs/09-faqs","title":"FAQs: edgeEngine memory & CPU usage"}}},{"node":{"fields":{"slug":"/faqs/08-faqs","title":"FAQs: edgeEngine Network Configuration"}}},{"node":{"fields":{"slug":"/misc/01-index","title":"mimik Technology Disclaimer and Terms of Use Policy"}}},{"node":{"fields":{"slug":"/misc/02-index","title":"mimik Technology Incorporated Privacy Policy"}}},{"node":{"fields":{"slug":"/introduction/02-index","title":"What Problem Does edgeEngine Solve?"}}},{"node":{"fields":{"slug":"/introduction/01-index","title":"What Does the edgeEngine Runtime Do?"}}},{"node":{"fields":{"slug":"/introduction/03-index","title":"How Does the edgeEngine Runtime Work?"}}},{"node":{"fields":{"slug":"/introduction/04-index","title":"What Does edgeEngine Service Mesh Do?"}}},{"node":{"fields":{"slug":"/introduction/05-index","title":"What Problem Does the edgeEngine Service Mesh Solve?"}}},{"node":{"fields":{"slug":"/key-concepts/01-index","title":"Understanding the Fundamentals of the edgeEngine Runtime"}}},{"node":{"fields":{"slug":"/key-concepts/02-index","title":"Understanding edgeEngine Images and edgeEngine Containers"}}},{"node":{"fields":{"slug":"/key-concepts/03-index","title":"Understanding edgeEngine Tokens"}}},{"node":{"fields":{"slug":"/introduction/06-index","title":"How Does edgeEngine Service Mesh Work?"}}},{"node":{"fields":{"slug":"/key-concepts/04-index","title":"Understanding the Strategies for Deploying an edge Microservice"}}},{"node":{"fields":{"slug":"/key-concepts/05-index","title":"Understanding the edgeEngine Context Object"}}},{"node":{"fields":{"slug":"/key-concepts/07-index","title":"Understanding the edgeEngine Security Framework"}}},{"node":{"fields":{"slug":"/key-concepts/08-index","title":"Understanding edgeEngine Data Management"}}},{"node":{"fields":{"slug":"/key-concepts/09-index","title":"Understanding the mimik Client Library for iOS"}}},{"node":{"fields":{"slug":"/key-concepts/11-index","title":"Working with edgeEngine and WebAssembly"}}},{"node":{"fields":{"slug":"/key-concepts/10-index","title":"Understanding How to Integrate the mimik Client Library into Android Applications"}}},{"node":{"fields":{"slug":"/tutorials/01-index","title":"QuickStart"}}},{"node":{"fields":{"slug":"/tutorials/02-index","title":"Getting the edgeEngine license and Identity server values from mimik Developer Portal"}}},{"node":{"fields":{"slug":"/tutorials/03-index","title":"Installing edgeEngine and the mimik-edge-cli Tool on a Linux System or MacOS"}}},{"node":{"fields":{"slug":"/tutorials/04-index","title":"Using the mimik-edge-cli Tool to Get An Access Token"}}},{"node":{"fields":{"slug":"/tutorials/05-index","title":"Getting edgeEngine Up and Running on Raspberry Pi"}}},{"node":{"fields":{"slug":"/tutorials/06-index","title":"Creating an edge Microservice using WebAssembly"}}},{"node":{"fields":{"slug":"/tutorials/08-index","title":"Creating a Secure Network Connection using mimik Tunneling Technology"}}},{"node":{"fields":{"slug":"/tutorials/07-index","title":"Getting Up and Running with mDebug"}}},{"node":{"fields":{"slug":"/tutorials/11-index","title":"Integrating the mimik Client Library into an iOS project"}}},{"node":{"fields":{"slug":"/tutorials/10-index","title":"Creating a Simple iOS Application that Uses an edge microservice"}}},{"node":{"fields":{"slug":"/tutorials/12-index","title":"Working with edgeEngine in an iOS project"}}},{"node":{"fields":{"slug":"/tutorials/09-index","title":"Creating a Simple Android Application that Uses an edge microservice"}}},{"node":{"fields":{"slug":"/tutorials/13-index","title":"Working with edge microservices in an iOS project"}}},{"node":{"fields":{"slug":"/key-concepts/06-index","title":"Understanding the edgeEngine Service Mesh"}}}]}},"pageContext":{"id":"31d16071-97c2-542a-9b8a-be54adb8eadd"}},
    "staticQueryHashes": ["2619113677","320950771","3706406642","417421954"]}